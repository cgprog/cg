#include<stdio.h>
#include<GL/glut.h>
#include<math.h>
GLint xOne,yOne,xTwo,yTwo;


void setPixel(GLint x,GLint y)
{
glPointSize(20.0);
glColor3f(1.0,0.0,0.0);
glBegin(GL_POINTS);
glVertex2d(x,y);
glEnd();
glFlush();
}

void linebres_L1(GLint x0,GLint y0,GLint xEnd,GLint yEnd,float m)
{
	GLint dx=abs(xEnd-x0);
	GLint dy=abs(yEnd-y0);
	GLint p=2*dy-dx;
	GLint twoDy=2*dy;
	GLint twoDyMinusDx=2*(dy-dx);
	GLint x,y;
	x=x0;
	y=y0;
	if(x0>xEnd)
	{
		x=xEnd;
		y=yEnd;
		xEnd=x0;
	}
	else
	{
		x=x0;
		y=y0;
	}
	setPixel(x,y);
	while(x<xEnd){
		x++;
		if(p<0)
		{
			p+=twoDy;
		}
		else
		{
			if(m<0)
				y--;
			else
				y++;
			p+=twoDyMinusDx;
		}
		setPixel(x,y);
	}
}


void linebres_GE1(GLint x0,GLint y0,GLint xEnd,GLint yEnd,float m)
{
	GLint dx=abs(xEnd-x0);
	GLint dy=abs(yEnd-y0);
	GLint p=2*dx-dy;
	GLint twoDx=2*dx;
	GLint twoDxMinusDy=2*(dx-dy);
	GLint x,y;
	x=x0;
	y=y0;
	if(y0>yEnd)
	{
		x=xEnd;
		y=yEnd;
		yEnd=y0;
	}
	else
	{
		x=x0;
		y=y0;
	}
	setPixel(x,y);
	while(y<yEnd){
		y++;
		if(p<0)
		{
			p+=twoDx;
		}
		else
		{
			if(m<0)
				x--;
			else
				x++;
			p+=twoDxMinusDy;
		}
		setPixel(x,y);
	}
}
void display()
{
	GLfloat m;
	glClearColor(1.0,1.0,1.0,1.0);
	glClear(GL_COLOR_BUFFER_BIT);
	m=(float)(yTwo-yOne)/(xTwo-xOne);
	if(fabs(m)>=1)
	   linebres_GE1(xOne,yOne,xTwo,yTwo,m);
	else
		linebres_L1(xOne,yOne,xTwo,yTwo,m);
}

void init()
{
	glViewport(0,0,500,500);
	glMatrixMode(GL_PROJECTION);
	glLoadIdentity();
	gluOrtho2D(0,500,0,500);
	

}



int main(int argc,char **argv)
{
	printf("Enter the starting points for line(x1,y1):\n");
	scanf("%d%d",&xOne,&yOne);
	printf("Enter the ending points for line(x2,y2):\n");
	scanf("%d%d",&xTwo,&yTwo);
	glutInit(&argc,argv);
	glutInitDisplayMode(GLUT_SINGLE|GLUT_RGB);
	glutInitWindowSize(500,500);
	glutCreateWindow("Bressenhams");
	init();
	glutDisplayFunc(display);
	glutMainLoop();
	return 0;
}
