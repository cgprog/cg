#include<stdio.h>
#include<GL/glut.h>
GLfloat vertices[9][3]={{-1.0,-1.0,-1.0},{1.0,-1.0,-1.0},{1.0,1.0,-1.0},{-1.0,1.0,-1.0},{-1.0,-1.0,1.0},{1.0,-1.0,1.0},{1.0,1.0,1.0},{-1.0,1.0,1.0},{0.0,0.0,0.0}};
GLfloat colors[8][3]={{0.0,0.0,0.0},{1.0,0.0,0.0},{0.0,1.0,0.0},{0.0,0.0,1.0},{1.0,1.0,0.0},{1.0,0.0,1.0},{0.0,1.0,1.0},{1.0,1.0,1.0}};

static float theta[]={0.0,0.0,0.0};
static int axis=2;
static double view[]={0.0,0.0,4.0};

void reshape(int w,int h)
{
	glViewport(0,0,w,h);
	glMatrixMode(GL_PROJECTION);
	glLoadIdentity();
	if(w<=h)
		glFrustum(-2.0,2.0,-2.0*(GLfloat)h/(GLfloat)w,2.0*(GLfloat)h/(GLfloat)w,2.0,10.0);
	else
		glFrustum(-2.0*(GLfloat)w/(GLfloat)h,2.0*(GLfloat)w/(GLfloat)h,-2.0,2.0,2.0,10.0);
	glMatrixMode(GL_MODELVIEW);

}

void polygon(int a,int b,int c,int d)
{
	glBegin(GL_POLYGON);
	glColor3fv(colors[a]);
	glVertex3fv(vertices[a]);
	glColor3fv(colors[b]);
	glVertex3fv(vertices[b]);
    glColor3fv(colors[c]);
	glVertex3fv(vertices[c]);
	glColor3fv(colors[d]);
	glVertex3fv(vertices[d]);
	glEnd();
}


void colorcube()
{
	polygon(0,3,2,1);
	polygon(1,2,6,5);
	polygon(2,3,7,6);
	polygon(0,1,5,4);
	polygon(4,7,6,5);
	polygon(0,3,7,4);
}

void display()
{
	glClear(GL_COLOR_BUFFER_BIT|GL_DEPTH_BUFFER_BIT);
	glLoadIdentity();
	gluLookAt(view[0],view[1],view[2],0.0,0.0,0.0,1.0,0.0,0.0);
	glRotatef(theta[0],1.0,0.0,0.0);
	glRotatef(theta[1],0.0,1.0,0.0);
	glRotatef(theta[2],0.0,0.0,1.0);
	colorcube();
	glFlush();
	glutSwapBuffers();
 }

void mouse(int btn,int state,int x,int y)
{
	if(btn==GLUT_LEFT_BUTTON && state==GLUT_DOWN)
		axis=0;
	if(btn==GLUT_MIDDLE_BUTTON && state==GLUT_DOWN)
		axis=1;
	if(btn==GLUT_RIGHT_BUTTON && state==GLUT_DOWN)
		axis=2;
	theta[axis]+=5.0;
	if(theta[axis]>360.0)
		theta[axis]-=360.0;
	display();
}

void keys(unsigned char key,int x,int y)
{
	if(key=='x')
		view[0]-=1.0;
	if(key=='X')
		view[0]+=1.0;
	if(key=='y')
		view[1]-=1.0;
	if(key=='Y')
		view[1]+=1.0;
	if(key=='z')
		view[2]-=1.0;
	if(key=='Z')
		view[2]+=1.0;
	display();
}



int main(int argc,char **argv)
{
	glutInit(&argc,argv);
	glutInitDisplayMode(GLUT_DOUBLE|GLUT_RGB|GLUT_DEPTH);
	glutInitWindowSize(500,500);
	glutCreateWindow("colorcube");
	glutReshapeFunc(reshape);
	glutDisplayFunc(display);
	glutMouseFunc(mouse);
	glutKeyboardFunc(keys);
	glEnable(GL_DEPTH_TEST);
	glutMainLoop();
	return 0;
}
