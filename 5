#include<stdio.h>
#include<GL/glut.h>
#define outcode int

float xmin,ymin,xmax,ymax;
float x0,y0,x1,y1;
double xvmin=200,yvmin=200,xvmax=300,yvmax=300;

const int LEFT=1;
const int RIGHT=2;
const int BOTTOM=4;
const int TOP=8;
 
outcode computeOutCode(double x,double y);
void init()
{
	glViewport(0,0,300,300);
	glMatrixMode(GL_PROJECTION);
	glLoadIdentity();
	gluOrtho2D(0,500,0,500);	  
}

outcode computeOutCode(double x,double y)
{
	outcode code=0;
	if(y>ymax)
		code|=TOP;
	else if(y<ymin)
		code|=BOTTOM;
	if(x>xmax)
		code|=RIGHT;
	else if(x<xmin)
		code|=LEFT;
	return code;
}

void clipAndDraw(double x0,double y0,double x1,double y1)
{
	outcode outcode0,outcode1,outcodeOut;
	bool done=false,accept=false;

	outcode0=computeOutCode(x0,y0);
	outcode1=computeOutCode(x1,y1);

	do{
		if(!(outcode0|outcode1)){
		    done=true;
			accept=true;
		}
		else if(outcode0&outcode1){
			done=true;
		}
		else{
			double x,y;
			outcodeOut=outcode0?outcode0:outcode1;

			if(outcodeOut & TOP)
			{
				x=x0+(x1-x0)*(ymax-y0)/(y1-y0);
				y=ymax;
			}
			else if(outcodeOut & BOTTOM)
			{
				x=x0+(x1-x0)*(ymin-y0)/(y1-y0);
				y=ymin;
			}
			else if(outcodeOut & RIGHT)
			{
				y=y0+(y1-y0)*(xmax-x0)/(x1-x0);
				x=xmax;
			}
			else
			{
				y=y0+(y1-y0)*(xmin-x0)/(x1-x0);
				x=xmin;
			}
			if(outcodeOut==outcode0)
			{
				x0=x;
				y0=y;
				outcode0=computeOutCode(x0,y0);
			}
			else{
				x1=x;
				y1=y;
				outcode1=computeOutCode(x1,y1);
			}
		}
	}while(!done);

	if(accept)
	{
		double sx=(xvmax-xvmin)/(xmax-xmin);
		double sy=(yvmax-yvmin)/(ymax,ymin);
		double vx0=xvmin+(x0-xmin)*sx;
		double vy0=yvmin+(y0-ymin)*sy;
		double vx1=xvmin+(x1-xmin)*sx;
		double vy1=yvmin+(y1-ymin)*sy;
		glColor3f(1.0,0.0,0.0);
		glBegin(GL_LINE_LOOP);
		glVertex2f(xvmin,yvmin);
		glVertex2f(xvmax,yvmin);
		glVertex2f(xvmax,yvmax);
		glVertex2f(xvmin,yvmax);
		glEnd();
		glColor3f(0.0,1.0,0.0);
		glBegin(GL_LINES);
		glVertex2f(vx0,vy0);
		glVertex2f(vx1,vy1);
		glEnd();
	}
	
}

void drawrect()
{
	glColor3f(0.0,1.0,0.0);
	glBegin(GL_LINE_LOOP);
	glVertex2f(xmin,ymin);
	glVertex2f(xmax,ymin);
	glVertex2f(xmax,ymax);
	glVertex2f(xmin,ymax);
	glEnd();
}
void drawline()
{
	glColor3f(1.0,0.0,0.0);
	glBegin(GL_LINES);
	glVertex2f(x0,y0);
	glVertex2f(x1,y1);
	glEnd();
}

void display()
{
	glClearColor(1.0,1.0,1.0,1.0);
	glClear(GL_COLOR_BUFFER_BIT);
	glColor3f(1.0,0.0,0.0);
	drawrect();
	glColor3f(0.0,1.0,0.0);
	drawline();
	clipAndDraw(x0,y0,x1,y1);
	glFlush();
}

int main(int argc,char **argv)
{
	printf("Enter the clipping window size(xmin,ymin,xmax,ymax):\n");
	scanf("%f%f%f%f",&xmin,&ymin,&xmax,&ymax);
	printf("Enter the points for line(x0,y0,x1,y1):\n");
	scanf("%f%f%f%f",&x0,&y0,&x1,&y1);
	glutInit(&argc,argv);
	glutInitDisplayMode(GLUT_SINGLE|GLUT_RGB);
	glutInitWindowSize(500,500);
	glutInitWindowPosition(0,0);
	glutCreateWindow("Cohensutherland");
	glutDisplayFunc(display);
	init();
	glutMainLoop();
	return 0;
}
